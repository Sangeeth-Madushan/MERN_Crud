{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\CRUD_MERN\\\\client\\\\src\\\\components\\\\Posts\\\\UpdatePostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePostForm = ({\n  post,\n  onPostUpdated,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:8000/posts/update/${post._id}`, {\n        title,\n        content\n      });\n      alert(\"Post updated successfully\");\n      onPostUpdated();\n    } catch (error) {\n      console.error(\"Error updating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePostForm, \"FuUFcn1xRm8cIchndfQyuMkCQtc=\");\n_c = UpdatePostForm;\nexport default UpdatePostForm;\nvar _c;\n$RefreshReg$(_c, \"UpdatePostForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdatePostForm","post","onPostUpdated","onCancel","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","put","_id","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/CRUD_MERN/client/src/components/Posts/UpdatePostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdatePostForm = ({ post, onPostUpdated, onCancel }) => {\r\n  const [title, setTitle] = useState(post.title);\r\n  const [content, setContent] = useState(post.content);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:8000/posts/update/${post._id}`, {\r\n        title,\r\n        content,\r\n      });\r\n      alert(\"Post updated successfully\");\r\n      onPostUpdated();\r\n    } catch (error) {\r\n      console.error(\"Error updating post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Edit Post</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <textarea\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        required\r\n      ></textarea>\r\n      <button type=\"submit\">Update Post</button>\r\n      <button type=\"button\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpdatePostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACK,IAAI,CAACI,KAAK,CAAC;EAC9C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACK,IAAI,CAACM,OAAO,CAAC;EAEpD,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsCX,IAAI,CAACY,GAAG,EAAE,EAAE;QAChER,KAAK;QACLE;MACF,CAAC,CAAC;MACFO,KAAK,CAAC,2BAA2B,CAAC;MAClCZ,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMkB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFvB,OAAA;MACEyB,KAAK,EAAEjB,OAAQ;MACfkB,QAAQ,EAAGf,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAEzB,QAAS;MAAAe,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClB,EAAA,CAtCIJ,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}